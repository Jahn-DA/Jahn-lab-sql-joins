-- 1. List the number of films per category.
SELECT category_id, count(*) as count
from film_category
Group by category_id;
-- 2. Retrieve the store ID, city, and country for each store.
SELECT c.country, cc.city FROM sakila.country as c
join sakila.city as cc
on c.country_id = cc.country_id;

SELECT c.country, cc.city FROM sakila.country as c
join sakila.city as cc
on c.country_id = cc.country_id
join sakila.address as a
on cc.city_id = a.city_id;

SELECT s.store_id, c.country, cc.city FROM sakila.country as c
join sakila.city as cc
on c.country_id = cc.country_id
join sakila.address as a
on cc.city_id = a.city_id
join sakila.store as s
on a.address_id = s.address_id;
-- 3. Calculate the total revenue generated by each store in dollars.
SELECT s.store_id, SUM(p.amount) AS total_amount
FROM sakila.staff AS s
JOIN sakila.payment AS p ON s.staff_id = p.staff_id
GROUP BY s.store_id;
-- 4. Determine the average running time of films for each category.
SELECT fc.category_id, avg(f.length) as average_rt
FROM sakila.film as f
JOIN sakila.film_category as fc
ON f.film_id = fc.film_id
Group by fc.category_id;
-- 5. Identify the film categories with the longest average running time.
SELECT fc.category_id, avg(f.length) as average_rt
FROM sakila.film as f
JOIN sakila.film_category as fc
ON f.film_id = fc.film_id
Group by fc.category_id
order by average_rt desc;
-- 6. Display the top 10 most frequently rented movies in descending order.
SELECT title, rental_rate
FROM sakila.film
ORDER BY rental_rate DESC
LIMIT 10;
-- 7. Determine if "Academy Dinosaur" can be rented from Store 1.
SELECT f.title, i.store_id
FROM sakila.film AS f
JOIN sakila.inventory AS i ON f.film_id = i.film_id
WHERE f.title = 'Academy Dinosaur' AND i.store_id = 1;